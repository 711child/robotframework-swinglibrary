*** Setting ***

library	SwingLibrary
library	Collections
testSetup	clearTable

*** Variable ***

${tableName}	testTable
${columnHeaderOne}	column one
${columnHeaderTwo}	column two
${enabledMenuItem}	Replace text
${disabledMenuItem}	Disabled menuitem

*** Test Case ***

Click On Table Cell
	tableCellShouldNotBeSelected	${tableName}	1	1
	Click On Table Cell	${tableName}	1	1	
	tableCellShouldBeSelected	${tableName}	1	1

Table Cell Should Not Be Selected By Index
	tableCellShouldNotBeSelected	${tableName}	0	0

Table Cell Should Not Be Selected By Column Header
	tableCellShouldNotBeSelected	${tableName}	0	${columnHeaderOne}

Table Cell Should Be Selected By Index
	selectTableCell	${tableName}	3	2
	tableCellShouldBeSelected	${tableName}	3	2

Table Cells Should Be Selected By Index
	selectTableCell	${tableName}	0	0
	tableCellShouldBeSelected	${tableName}	0	0
	
Many Table Cells Should Be Selected By Index
	selectTableCell	${tableName}	0	0
	addTableCellSelection	${tableName}	2	1
	addTableCellSelection	${tableName}	2	2
	addTableCellSelection	${tableName}	3	1
	addTableCellSelection	${tableName}	3	2
	tableCellShouldBeSelected	${tableName}	0	0
	tableCellShouldBeSelected	${tableName}	2	1
	tableCellShouldBeSelected	${tableName}	2	2
	tableCellShouldBeSelected	${tableName}	3	1
	tableCellShouldBeSelected	${tableName}	3	2

Table Cell Area Should Be Selected
	selectTableCellArea	${tableName}	1	2	1	2
	tableCellShouldBeSelected	${tableName}	1	1
	tableCellShouldBeSelected	${tableName}	1	2
	tableCellShouldBeSelected	${tableName}	2	1
	tableCellShouldBeSelected	${tableName}	2	2
	tableCellShouldNotBeSelected	${tableName}	0	0
	tableCellShouldNotBeSelected	${tableName}	0	3
	tableCellShouldNotBeSelected	${tableName}	3	0
	tableCellShouldNotBeSelected	${tableName}	3	3

Table Cell Should Be Selected By Column Header
	selectTableCell	${tableName}	3	column two
	tableCellShouldBeSelected	${tableName}	3	column two

Select Table Cell By Index
	selectTableCell	${tableName}	3	2
	${cellValue}=	getSelectedTableCellValue	${tableName}
	shouldBeEqual	four/three	${cellValue}

Select Table Cell By Column Header Name
	selectTableCell	${tableName}	1	column three
	${cellValue}=	getSelectedTableCellValue	${tableName}
	shouldBeEqual	two/three	${cellValue}

Select Table Cell Should Fail If The Cell Doesn't Exist
	runKeywordAndExpectError	The specified table cell (row: 10, column: 15) is invalid.	selectTableCell	${tableName}	10	15
	runKeywordAndExpectError	The specified table cell (row: 10, column: nonexisting) is invalid.	selectTableCell	${tableName}	10	nonexisting

Clear Table Selection
	selectTableCell	${tableName}	1	2
	tableCellShouldBeSelected	${tableName}	1	2
	clearTableSelection	${tableName}
	tableCellShouldNotBeSelected	${tableName}	1	2

Get Selected Table Cell Value
	selectTableCell	${tableName}	3	2
	${cellValue}=	getSelectedTableCellValue	${tableName}
	shouldBeEqual	four/three	${cellValue}

Get Table Cell Value By Index
	${cellValue}=	getTableCellValue	${tableName}	2	1
	shouldBeEqual	three/two	${cellValue}

Clear Table Cell
	clearTableCell	${tableName}	2	1
	${cellValue}=	getTableCellValue	${tableName}	2	1
	shouldBeEmpty	${cellValue}

Get Table Cell Value By Column Header
	${cellValue}=	getTableCellValue	${tableName}	1	column two
	shouldBeEqual	two/two	${cellValue}

Type Into Table Cell
	typeIntoTableCell	${tableName}	2	1	newValue
	${cellValue}=	getTableCellValue	${tableName}	2	1
	shouldBeEqual	newValue	${cellValue}

Set Table Cell Value
	setTableCellValue	${tableName}	1	0	four/one
	${cellValue}=	getTableCellValue	${tableName}	1	0
	shouldBeEqual	four/one	${cellValue}

Get Table Column Count By Name
	${columnCount}=	getTableColumnCount	${tableName}
	shouldBeEqualAsIntegers	4	${columnCount}

Get Table Column Count By Index
	${columnCount}=	getTableColumnCount	0
	shouldBeEqualAsIntegers	4	${columnCount}

Get Table Row Count By Name
	${rowCount}=	getTableRowCount	${tableName}
	shouldBeEqualAsIntegers	4	${rowCount}

Find Table Row
	${row}=	findTableRow	${tableName}	one/one	
	shouldBeEqualAsIntegers	0	${row}
	${row}=	findTableRow	${tableName}	four/four
	shouldBeEqualAsIntegers	3	${row}

Find Table Row With Column
	${row}=	findTableRow	${tableName}	one/one	column one	
	shouldBeEqualAsIntegers	0	${row}
	${row}=	findTableRow	${tableName}	four/four	column four
	shouldBeEqualAsIntegers	3	${row}
	${row}=	findTableRow	TableWithSingleValue	foo	
	shouldBeEqualAsIntegers	0	${row}
	${row}=	findTableRow	TableWithSingleValue	foo	column three
	shouldBeEqualAsIntegers	2	${row}
	${row}=	findTableRow	TableWithSingleValue	foo	column two
	shouldBeEqualAsIntegers	1	${row}
	${row}=	findTableRow	TableWithSingleValue	foo	column four
	shouldBeEqualAsIntegers	3	${row}

Get Table Row Count By Index
	${rowCount}=	getTableRowCount	0
	shouldBeEqualAsIntegers	4	${rowCount}

Select From Table Cell Popup Menu
	selectFromTableCellPopupMenu	${tableName}	2	column one	Submenu|Enabled menuitem
	selectFromTableCellPopupMenu	${tableName}	2	1	Replace text
	${newCellValue}=	getTableCellValue	${tableName}	2	1
	shouldBeEqual	newValue	${newCellValue}

Select From Popup On Selected Cells
	selectTableCellArea	${tableName}	1	2	1	2
	selectFromTableCellPopupMenuOnSelectedCells	${tableName}	Replace text in selected
	${newCellValue}=	getTableCellValue	${tableName}	1	1
	shouldBeEqual	newValue	${newCellValue}
	${newCellValue}=	getTableCellValue	${tableName}	1	2
	shouldBeEqual	newValue	${newCellValue}
	${newCellValue}=	getTableCellValue	${tableName}	2	1
	shouldBeEqual	newValue	${newCellValue}
	${newCellValue}=	getTableCellValue	${tableName}	2	2
	shouldBeEqual	newValue	${newCellValue}

Select From Table Cell Popup Menu Accepts Integer Arguments
	${rowAsInteger}=	convertToInteger	3
	selectFromTableCellPopupMenu	${tableName}	${rowAsInteger}	1	Replace text
	${newCellValue}=	getTableCellValue	${tableName}	${rowAsInteger}	1
	shouldBeEqual	newValue	${newCellValue}

Table Cell Popup Menu Should Be Disabled
	tableCellPopupMenuShouldBeDisabled	${tableName}	2	column one	${disabledMenuItem}
	runKeywordAndExpectError	Menuitem '${enabledMenuItem}' at '2, column one' is enabled.	tableCellPopupMenuShouldBeDisabled	${tableName}	2	column one	${enabledMenuItem}

Table Cell Popup Menu Should Be Enabled
	tableCellPopupMenuShouldBeEnabled	${tableName}	2	column one	${enabledMenuItem}
	runKeywordAndExpectError	Menuitem '${disabledMenuItem}' at '2, column one' is disabled.	tableCellPopupMenuShouldBeEnabled	${tableName}	2	column one	${disabledMenuItem}

Get Table Headers
	${header1}	${header2}	${header3}	${header4}=	getTableHeaders	${tableName}
	shouldBeEqual	column one	${header1}
	shouldBeEqual	column two	${header2}
	shouldBeEqual	column three	${header3}
	shouldBeEqual	column four	${header4}

Table Keywords Fail If Context Is Not Set
	selectEmptyContext
	tableKeywordShouldFail	getTableCellValue	someTable	0	0
	tableKeywordShouldFail	getSelectedTableCellValue	someTable
	tableKeywordShouldFail	tableCellShouldBeSelected	someTable	0	0
	tableKeywordShouldFail	tableCellShouldNotBeSelected	someTable	0	0
	tableKeywordShouldFail	selectTableCell	someTable	0	0
	tableKeywordShouldFail	clearTableSelection	someTable
	tableKeywordShouldFail	getTableColumnCount	someTable
	tableKeywordShouldFail	getTableRowCount	someTable
	[teardown]	selectMainWindow

Get Table Column Values
	${expectedValues}=	createList	one/two	two/two	three/two	four/two
	${values}=	getTableColumnValues	anotherTable	${columnHeaderTwo}
	listsShouldBeEqual	${expectedValues}	${values}

Get Table Cell Properties
	${color}=	getTableCellProperty	${tableName}	2	2	background
	shouldBeEqualAsIntegers	255	${color.getRed()}
	shouldBeEqualAsIntegers	255	${color.getGreen()}
	shouldBeEqualAsIntegers	255	${color.getBlue()}

*** Keyword ***

tableKeywordShouldFail	[Arguments]	${keyword}	@{arguments}
	runKeywordAndExpectError	*To use this keyword you must first select a correct context*	${keyword}	@{arguments}

clearTable
	selectMainWindow
	clearTableSelection	${tableName}
